name: Continuous Integration

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - '3.9'
          - '3.11'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Pre-commit Checks
        run: |
          pip -q install pre-commit
          pre-commit run --all-files

      - name: Install Dependencies
        run: |
          pip install poetry
          poetry install

      - name: Run Example
        run: |
          python example.py > case.jsonld

      # Ensure that the example output is a valid CASE JSON-LD graph
      - name: CASE Export Validation
        uses: kchason/case-validation-action@v2.8.0
        with:
          case-path: ./
          case-version: "case-1.2.0"
          extension-filter: "jsonld"
          report-in-pr: "true"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          pull-request: ${{ github.event.pull_request.number }}

      # Always build the package as a sanity check to ensure no issues with the build system
      # exist as part of the CI process
      - name: Build Package
        run: |
          poetry build

      # Only push to PyPi when a tag is created starting with 'v'
      - name: Push to PyPi
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
          poetry publish
